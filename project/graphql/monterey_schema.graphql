interface AnonymousThing
  {
    type: Uriorcurie!
    category: GeneralCategories!
  }

type Database
  {
  }

type DataEntity
  {
    id: Uriorcurie!
    name: String
    description: String
    type: Uriorcurie!
    category: GeneralCategories!
  }

type DataGeneration
  {
    id: Uriorcurie!
    name: String
    description: String
    type: Uriorcurie!
    category: GeneralCategories!
    used: Instrument
    followed: Protocol
    hasInputs: [MaterialEntity]
    hasOutputs: [DataEntity]!
  }

type DataProcessing
  {
    id: Uriorcurie!
    name: String
    description: String
    type: Uriorcurie!
    category: GeneralCategories!
    hasInputs: [DataEntity]
    hasOutputs: [DataEntity]!
  }

type Instrument
  {
    id: Uriorcurie!
    name: String
    description: String
    type: Uriorcurie!
    category: GeneralCategories!
  }

type Investigation
  {
    id: Uriorcurie!
    name: String
    description: String
    type: Uriorcurie!
    category: GeneralCategories!
    hasInputs: [MaterialOrData]
    hasOutputs: [MaterialOrData]!
  }

type MaterialEntity
  {
    id: Uriorcurie!
    name: String
    description: String
    type: Uriorcurie!
    category: GeneralCategories!
  }

interface MaterialOrData
  {
    id: Uriorcurie!
    name: String
    description: String
    type: Uriorcurie!
    category: GeneralCategories!
  }

type MaterialProcessing
  {
    id: Uriorcurie!
    name: String
    description: String
    type: Uriorcurie!
    category: GeneralCategories!
    used: Instrument
    followed: Protocol
    hasInputs: [MaterialEntity]
    hasOutputs: [MaterialEntity]!
  }

interface NamedThing
  {
    id: Uriorcurie!
    name: String
    description: String
    type: Uriorcurie!
    category: GeneralCategories!
  }

interface NmdcClass
  {
  }

type Person
  {
    id: Uriorcurie!
    name: String
    description: String
    type: Uriorcurie!
    category: GeneralCategories!
    orcid: Uriorcurie!
  }

interface PlannedProcess
  {
    id: Uriorcurie!
    name: String
    description: String
    type: Uriorcurie!
    category: GeneralCategories!
    hasInputs: [MaterialOrData]
    hasOutputs: [MaterialOrData]!
  }

type Protocol
  {
    id: Uriorcurie!
    name: String
    description: String
    type: Uriorcurie!
    category: GeneralCategories!
  }


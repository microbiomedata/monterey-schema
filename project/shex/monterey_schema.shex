BASE <https://w3id.org/microbiomedata/monterey-schema/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX linkml: <https://w3id.org/linkml/>
PREFIX schema1: <http://schema.org/>


linkml:String xsd:string

linkml:Integer xsd:integer

linkml:Boolean xsd:boolean

linkml:Float xsd:float

linkml:Double xsd:double

linkml:Decimal xsd:decimal

linkml:Time xsd:time

linkml:Date xsd:date

linkml:Datetime xsd:dateTime

linkml:DateOrDatetime linkml:DateOrDatetime

linkml:Uriorcurie IRI

linkml:Curie xsd:string

linkml:Uri IRI

linkml:Ncname xsd:string

linkml:Objectidentifier IRI

linkml:Nodeidentifier NONLITERAL

linkml:Jsonpointer xsd:string

linkml:Jsonpath xsd:string

linkml:Sparqlpath xsd:string

<AnonymousThing> {
    (  $<AnonymousThing_tes> (  &<Root_tes> ;
          rdf:type [ <Root> ] ?
       ) ;
       rdf:type [ <AnonymousThing> ] ?
    )
}

<Database> CLOSED {
    (  $<Database_tes> (  &<DataEntity_tes> ;
          rdf:type [ <DataEntity> ] ?
       ) ;
       rdf:type [ <Database> ]
    )
}

<DataEntity>  (
    CLOSED {
       (  $<DataEntity_tes> (  &<MaterialOrData_tes> ;
             rdf:type [ <MaterialOrData> ] ?
          ) ;
          rdf:type [ <DataEntity> ]
       )
    } OR @<Database>
)

<DataGeneration> CLOSED {
    (  $<DataGeneration_tes> (  &<PlannedProcess_tes> ;
          rdf:type [ <PlannedProcess> ] ? ;
          <has_inputs> @<MaterialEntity> * ;
          <has_outputs> @<DataEntity> *
       ) ;
       rdf:type [ <DataGeneration> ]
    )
}

<DataProcessing> CLOSED {
    (  $<DataProcessing_tes> (  &<PlannedProcess_tes> ;
          rdf:type [ <PlannedProcess> ] ? ;
          <has_inputs> @<DataEntity> * ;
          <has_outputs> @<DataEntity> *
       ) ;
       rdf:type [ <DataProcessing> ]
    )
}

<MaterialEntity> CLOSED {
    (  $<MaterialEntity_tes> (  &<MaterialOrData_tes> ;
          rdf:type [ <MaterialOrData> ] ?
       ) ;
       rdf:type [ <MaterialEntity> ]
    )
}

<MaterialOrData>  (
    CLOSED {
       (  $<MaterialOrData_tes> (  &<NamedThing_tes> ;
             rdf:type [ schema1:Thing ] ?
          ) ;
          rdf:type [ <MaterialOrData> ]
       )
    } OR @<DataEntity> OR @<MaterialEntity>
)

<MaterialProcessing> CLOSED {
    (  $<MaterialProcessing_tes> (  &<PlannedProcess_tes> ;
          rdf:type [ <PlannedProcess> ] ? ;
          <has_inputs> @<MaterialEntity> * ;
          <has_outputs> @<MaterialEntity> *
       ) ;
       rdf:type [ <MaterialProcessing> ]
    )
}

<NamedThing>  (
    @<MaterialOrData> OR @<PlannedProcess>
)

<NamedThing_struct> {
    (  $<NamedThing_tes> (  &<Root_tes> ;
          rdf:type [ <Root> ] ? ;
          schema1:name @linkml:String ? ;
          schema1:description @linkml:String ?
       ) ;
       rdf:type [ schema1:Thing ]
    )
}

<PlannedProcess>  (
    @<DataGeneration> OR @<DataProcessing> OR @<MaterialProcessing>
)

<PlannedProcess_struct> {
    (  $<PlannedProcess_tes> (  &<NamedThing_tes> ;
          rdf:type [ schema1:Thing ] ? ;
          <has_inputs> @<MaterialOrData> * ;
          <has_outputs> @<MaterialOrData> *
       ) ;
       rdf:type [ <PlannedProcess> ]
    )
}

<Root>  (
    @<AnonymousThing> OR @<NamedThing>
)

<Root_struct> {
    (  $<Root_tes> rdf:type @linkml:Uriorcurie ;
       rdf:type [ <Root> ] ?
    )
}


